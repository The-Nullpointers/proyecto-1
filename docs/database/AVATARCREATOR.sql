CREATE TABLE AVATARCREATOR_DBA.USERS(
    USERNAME VARCHAR2(10) NOT NULL CONSTRAINT PK_USERNAME PRIMARY KEY,
    PASSWORD VARCHAR2(32),
    AVATARS INT);
    
CREATE TABLE AVATARCREATOR_DBA.AVATARS(
    ID_AVATAR INT NOT NULL CONSTRAINT PK_ID_AVATAR PRIMARY KEY,
    USERNAME VARCHAR2(10) NOT NULL, --FOREIGN KEY
    ID_COLOR INT NOT NULL, --FOREIGN KEY
    ID_HEAD INT NOT NULL, --FOREIGN KEY
    ID_TORSO INT NOT NULL, --FOREIGN KEY
    ID_ACCESSORY INT NOT NULL); --FOREIGN KEY
    
    
CREATE TABLE AVATARCREATOR_DBA.COLORS(
    ID_COLOR INT NOT NULL CONSTRAINT PK_ID_COLOR PRIMARY KEY,
    COLOR_NAME VARCHAR2(32));
    
    
CREATE TABLE AVATARCREATOR_DBA.HEADS(
    ID_HEAD INT NOT NULL CONSTRAINT PK_ID_HEAD PRIMARY KEY,
    HEAD_NAME VARCHAR2(32));
    

CREATE TABLE AVATARCREATOR_DBA.TORSOS(
    ID_TORSO INT NOT NULL CONSTRAINT PK_ID_TORSO PRIMARY KEY,
    TORSO_NAME VARCHAR2(32));
    
    
CREATE TABLE AVATARCREATOR_DBA.ACCESSORIES(
    ID_ACCESSORY INT NOT NULL CONSTRAINT PK_ID_ACCESSORY PRIMARY KEY,
    ACCESSORY_NAME VARCHAR2(32));
    
    
--RELATIONS--
--ALTER TABLE *TABLA CON EL FK* ADD CONSTRAINT FK_*TABLA FK*_*TABLA PK*
--FOREIGN KEY (*NOMBRE DEL ESPACIO DEL FK*) REFERENCES *TABLA PK*(*NOMBRE DEL ESPACIO DEL PK*)

ALTER TABLE AVATARCREATOR_DBA.AVATARS ADD CONSTRAINT FK_AVATARS_USERS
FOREIGN KEY (USERNAME) REFERENCES AVATARCREATOR_DBA.USERS(USERNAME);

ALTER TABLE AVATARCREATOR_DBA.AVATARS ADD CONSTRAINT FK_AVATARS_COLORS
FOREIGN KEY (ID_COLOR) REFERENCES AVATARCREATOR_DBA.COLORS(ID_COLOR);

ALTER TABLE AVATARCREATOR_DBA.AVATARS ADD CONSTRAINT FK_AVATARS_HEADS
FOREIGN KEY (ID_HEAD) REFERENCES AVATARCREATOR_DBA.HEADS(ID_HEAD);

ALTER TABLE AVATARCREATOR_DBA.AVATARS ADD CONSTRAINT FK_AVATAR_TORSOS
FOREIGN KEY (ID_TORSO) REFERENCES AVATARCREATOR_DBA.TORSOS(ID_TORSO);

ALTER TABLE AVATARCREATOR_DBA.AVATARS ADD CONSTRAINT FK_AVATAR_ACCESSORIES
FOREIGN KEY (ID_ACCESSORY) REFERENCES AVATARCREATOR_DBA.ACCESSORIES(ID_ACCESSORY);

--SECUENCIAS PARA ID'S
/
CREATE SEQUENCE SQ_AVATARS
    INCREMENT BY 1
    START WITH 1
    MINVALUE 1
    MAXVALUE 99999
    NOCYCLE
    NOCACHE;
/    
CREATE SEQUENCE SQ_COLORS
    INCREMENT BY 1
    START WITH 1
    MINVALUE 1
    MAXVALUE 99999
    NOCYCLE
    NOCACHE;
/
CREATE SEQUENCE SQ_HEADS
    INCREMENT BY 1
    START WITH 1
    MINVALUE 1
    MAXVALUE 99999
    NOCYCLE
    NOCACHE;
/
CREATE SEQUENCE SQ_TORSOS
    INCREMENT BY 1
    START WITH 1
    MINVALUE 1
    MAXVALUE 99999
    NOCYCLE
    NOCACHE;
    
/   
CREATE SEQUENCE SQ_ACCESSORIES
    INCREMENT BY 1
    START WITH 1
    MINVALUE 1
    MAXVALUE 99999
    NOCYCLE
    NOCACHE;
/   
--PROCEDIMIENTOS ALMACENADOS

--INSERT INTOS

CREATE OR REPLACE PROCEDURE AVATARCREATOR_DBA.INSERT_INTO_USERS(
    P_USERNAME IN VARCHAR2,
    P_PASSWORD IN VARCHAR2)
IS
BEGIN
    INSERT INTO AVATARCREATOR_DBA.USERS VALUES (P_USERNAME, P_PASSWORD, 3);
    COMMIT;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END INSERT_INTO_USERS;
/

CREATE OR REPLACE PROCEDURE AVATARCREATOR_DBA.INSERT_INTO_COLORS(P_COLOR_NAME IN VARCHAR2)
IS
BEGIN
    INSERT INTO AVATARCREATOR_DBA.COLORS VALUES (SQ_COLORS.NEXTVAL, P_COLOR_NAME);
    COMMIT;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END INSERT_INTO_COLORS;
/

CREATE OR REPLACE PROCEDURE AVATARCREATOR_DBA.INSERT_INTO_HEADS(P_HEAD_NAME IN VARCHAR2)
IS
BEGIN
    INSERT INTO AVATARCREATOR_DBA.HEADS VALUES (SQ_HEADS.NEXTVAL, P_HEAD_NAME);
    COMMIT;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END INSERT_INTO_HEADS;
/

CREATE OR REPLACE PROCEDURE AVATARCREATOR_DBA.INSERT_INTO_TORSOS(P_TORSO_NAME IN VARCHAR2)
IS
BEGIN
    INSERT INTO AVATARCREATOR_DBA.TORSOS VALUES (SQ_TORSOS.NEXTVAL, P_TORSO_NAME);
    COMMIT;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END INSERT_INTO_TORSOS;
/

CREATE OR REPLACE PROCEDURE AVATARCREATOR_DBA.INSERT_INTO_ACCESSORIES(P_ACCESSORY_NAME IN VARCHAR2)
IS
BEGIN
    INSERT INTO AVATARCREATOR_DBA.ACCESSORIES VALUES (SQ_ACCESSORIES.NEXTVAL, P_ACCESSORY_NAME);
    COMMIT;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END INSERT_INTO_ACCESSORIES;
/

CREATE OR REPLACE PROCEDURE AVATARCREATOR_DBA.INSERT_INTO_AVATARS(
    P_USERNAME IN VARCHAR2,
    P_ID_COLOR IN INT, 
    P_ID_HEAD IN INT, 
    P_ID_TORSO IN INT, 
    P_ID_ACCESSORY IN INT)
IS
BEGIN
    INSERT INTO AVATARCREATOR_DBA.AVATARS VALUES (SQ_AVATARS.NEXTVAL, P_USERNAME, P_ID_COLOR, P_ID_HEAD, P_ID_TORSO, P_ID_ACCESSORY);
    COMMIT;
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END INSERT_INTO_AVATARS;
/
--UPDATES

--UPDATE NUMBER OF AVATARS OF AN USER
CREATE OR REPLACE PROCEDURE AVATARCREATOR_DBA.UPDATE_USERS_AVATARS(
    P_USERNAME IN VARCHAR2,
    P_AVATARS IN INT)
IS
BEGIN
    UPDATE AVATARCREATOR_DBA.USERS SET AVATARS = P_AVATARS WHERE USERNAME = P_USERNAME;    
    COMMIT;
    
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END UPDATE_USERS_AVATARS;
/

CREATE OR REPLACE PROCEDURE AVATARCREATOR_DBA.UPDATE_AVATAR(
    P_ID_AVATAR IN INT,
    P_ID_COLOR IN INT,
    P_ID_HEAD IN INT,
    P_ID_TORSO IN INT,
    P_ID_ACCESSORY IN INT)
IS
BEGIN
    UPDATE AVATARCREATOR_DBA.AVATARS SET ID_COLOR = P_ID_COLOR, ID_HEAD = P_ID_HEAD, ID_TORSO = P_ID_TORSO, ID_ACCESSORY = P_ID_ACCESSORY WHERE ID_AVATAR = P_ID_AVATAR;
    COMMIT;
    
EXCEPTION WHEN OTHERS THEN ROLLBACK;
END UPDATE_AVATAR;
/

--TRIGGER
CREATE OR REPLACE TRIGGER INSERT_INTO_AVATARS_TRIGGER
AFTER INSERT ON USERS
FOR EACH ROW
BEGIN
    INSERT INTO AVATARCREATOR_DBA.AVATARS (ID_AVATAR, USERNAME, ID_COLOR, ID_HEAD, ID_TORSO, ID_ACCESSORY)
    SELECT
      SQ_AVATARS.NEXTVAL,
      :new.USERNAME,
      (SELECT ID_COLOR FROM AVATARCREATOR_DBA.COLORS ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY),
      (SELECT ID_HEAD FROM AVATARCREATOR_DBA.HEADS ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY),
      (SELECT ID_TORSO FROM AVATARCREATOR_DBA.TORSOS ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY),
      (SELECT ID_ACCESSORY FROM AVATARCREATOR_DBA.ACCESSORIES ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY)
    FROM DUAL WHERE ROWNUM = 1;
    
    INSERT INTO AVATARCREATOR_DBA.AVATARS (ID_AVATAR, USERNAME, ID_COLOR, ID_HEAD, ID_TORSO, ID_ACCESSORY)
    SELECT
      SQ_AVATARS.NEXTVAL,
      :new.USERNAME,
      (SELECT ID_COLOR FROM AVATARCREATOR_DBA.COLORS ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY),
      (SELECT ID_HEAD FROM AVATARCREATOR_DBA.HEADS ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY),
      (SELECT ID_TORSO FROM AVATARCREATOR_DBA.TORSOS ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY),
      (SELECT ID_ACCESSORY FROM AVATARCREATOR_DBA.ACCESSORIES ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY)
    FROM DUAL WHERE ROWNUM = 1;
    
    INSERT INTO AVATARCREATOR_DBA.AVATARS (ID_AVATAR, USERNAME, ID_COLOR, ID_HEAD, ID_TORSO, ID_ACCESSORY)
    SELECT
      SQ_AVATARS.NEXTVAL,
      :new.USERNAME,
      (SELECT ID_COLOR FROM AVATARCREATOR_DBA.COLORS ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY),
      (SELECT ID_HEAD FROM AVATARCREATOR_DBA.HEADS ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY),
      (SELECT ID_TORSO FROM AVATARCREATOR_DBA.TORSOS ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY),
      (SELECT ID_ACCESSORY FROM AVATARCREATOR_DBA.ACCESSORIES ORDER BY DBMS_RANDOM.VALUE FETCH FIRST 1 ROWS ONLY)
    FROM DUAL WHERE ROWNUM = 1;
    
END;
/
SET SERVEROUTPUT ON;
DECLARE
  CURSOR avatar_cur IS
    SELECT ID_AVATAR, USERNAME, ID_COLOR, ID_HEAD, ID_TORSO, ID_ACCESSORY FROM AVATARS;
  TYPE avatar_rec_type IS RECORD (
    ID_AVATAR AVATARS.ID_AVATAR%TYPE,
    USERNAME AVATARS.USERNAME%TYPE,
    ID_COLOR AVATARS.ID_COLOR%TYPE,
    ID_HEAD AVATARS.ID_HEAD%TYPE,
    ID_TORSO AVATARS.ID_TORSO%TYPE,
    ID_ACCESSORY AVATARS.ID_ACCESSORY%TYPE,
    COLOR_NAME COLORS.COLOR_NAME%TYPE,
    HEAD_NAME HEADS.HEAD_NAME%TYPE,
    TORSO_NAME TORSOS.TORSO_NAME%TYPE,
    ACCESSORY_NAME ACCESSORIES.ACCESSORY_NAME%TYPE
  );
  avatar_rec avatar_rec_type;
BEGIN
  OPEN avatar_cur;
  LOOP
    FETCH avatar_cur INTO avatar_rec.ID_AVATAR, avatar_rec.USERNAME,
                         avatar_rec.ID_COLOR, avatar_rec.ID_HEAD,
                         avatar_rec.ID_TORSO, avatar_rec.ID_ACCESSORY;

    EXIT WHEN avatar_cur%NOTFOUND;

    -- Fetch the corresponding names from related tables
    SELECT COLOR_NAME INTO avatar_rec.COLOR_NAME FROM COLORS WHERE ID_COLOR = avatar_rec.ID_COLOR;
    SELECT HEAD_NAME INTO avatar_rec.HEAD_NAME FROM HEADS WHERE ID_HEAD = avatar_rec.ID_HEAD;
    SELECT TORSO_NAME INTO avatar_rec.TORSO_NAME FROM TORSOS WHERE ID_TORSO = avatar_rec.ID_TORSO;
    SELECT ACCESSORY_NAME INTO avatar_rec.ACCESSORY_NAME FROM ACCESSORIES WHERE ID_ACCESSORY = avatar_rec.ID_ACCESSORY;

    -- Print the results
    DBMS_OUTPUT.PUT_LINE('ID_AVATAR: ' || avatar_rec.ID_AVATAR ||
                         ', USERNAME: ' || avatar_rec.USERNAME ||
                         ', COLOR_NAME: ' || avatar_rec.COLOR_NAME ||
                         ', HEAD_NAME: ' || avatar_rec.HEAD_NAME ||
                         ', TORSO_NAME: ' || avatar_rec.TORSO_NAME ||
                         ', ACCESSORY_NAME: ' || avatar_rec.ACCESSORY_NAME);
  END LOOP;
  CLOSE avatar_cur;
END;
/























